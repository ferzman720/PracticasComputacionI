# -*- coding: utf-8 -*-
"""GaussJordanP.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EszcBobE1bTE9544KljHEBGSDwvrGjL0
"""

import sys
def crearMa(sys,l):
    for i in range(0,sys):
        l.append([])
    for k in range(0,sys):
        for m in range(0,sys+1):
            l[k].append(0)
    return l

def crears(sys,l):
    for i in range(0,sys):
        l.append([])
    for k in range(0,sys):
        for m in range(0,sys+1):
            l[k].append(0)
    return l
    
def llenar(sys,l):      
    print(l)
    for i in range(0, sys):
        for j in range(0, sys+1):
            l[i][j]=float(input("Introduce el elemento: "+ str(i)+","+str(j)))

    return l

n=int(input("¿De cuantas ecuaciones deseas tu sistema?"))

s=[]
M=[]
crearMa(n,M)
crears(n,s)
llenar(n, M)



for i in range(n):
    if M[i][i] == 0:
        sys
        
        sys.exit('El sistema No tiene solución')
        
    for j in range(n):
        if i != j:
            aux = M[j][i]/M[i][i]

            for k in range(n+1):
                M[j][k] = M[j][k] - aux * M[i][k]


for i in range(n):
    s[i] = M[i][n]/M[i][i]
    


print("El resultado es : ")
for l in range(n):
    print("x"+str(l),s[l])